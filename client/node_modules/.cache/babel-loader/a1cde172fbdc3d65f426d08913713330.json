{"ast":null,"code":"import React, { useReducer } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\"; // import {\n//   SET_ALERT,\n//   REMOVE_ALERT\n// } from \"../types\";\n// const AlertState = (props) => {\n//   const initialState = [];\n//   const [state, dispatch] = useReducer(alertReducer, initialState);\n//   //Set ALert\n//   const setAlert = (msg, type, timeout=5000) => {\n//     const id = uuidv4();\n//     dispatch({\n//         type: SET_ALERT,\n//         payload: { msg, type, id}\n//     });\n//     setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id}), timeout)\n//   }\n//   return (\n//     <AlertContext.Provider\n//       value={{\n//         alerts: state,\n//         setAlert\n//       }}\n//     >\n//       {props.children}\n//     </AlertContext.Provider>\n//   );\n// };\n// export default AlertState;","map":{"version":3,"sources":["C:/Users/Khadarow/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuidv4","AlertContext","alertReducer"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport AlertContext from \"./alertContext\";\r\nimport alertReducer from \"./alertReducer\";\r\n\r\n\r\n\r\n\r\n\r\n// import {\r\n//   SET_ALERT,\r\n//   REMOVE_ALERT\r\n// } from \"../types\";\r\n\r\n// const AlertState = (props) => {\r\n//   const initialState = [];\r\n\r\n//   const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n//   //Set ALert\r\n//   const setAlert = (msg, type, timeout=5000) => {\r\n//     const id = uuidv4();\r\n//     dispatch({\r\n//         type: SET_ALERT,\r\n//         payload: { msg, type, id}\r\n//     });\r\n\r\n//     setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id}), timeout)\r\n//   }\r\n\r\n//   return (\r\n//     <AlertContext.Provider\r\n//       value={{\r\n//         alerts: state,\r\n//         setAlert\r\n//       }}\r\n//     >\r\n//       {props.children}\r\n//     </AlertContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default AlertState;\r\n"]},"metadata":{},"sourceType":"module"}