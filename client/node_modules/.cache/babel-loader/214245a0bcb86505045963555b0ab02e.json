{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      ret;\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        err: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Khadarow/Desktop/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","ret","contacts","payload","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","err"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,YARF,EASEC,aATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACEY,MAAAA,GAAG;;AACL,SAAKX,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELI,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoBH,MAAM,CAACI,OAA3B;AAFL,OAAP;;AAKF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeE,GAAf,CAAoBC,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACI,OAAP,CAAeG,EAA9B,GAAmCP,MAAM,CAACI,OAA1C,GAAoDE,OAD5C;AAFL,OAAP;;AAOF,SAAKd,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeK,MAAf,CACPF,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACI,OAD3B;AAFL,OAAP;;AAMF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,OAAO,EAAET,MAAM,CAACI;AAFX,OAAP;;AAIF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELU,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKb,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACI,QAAN,CAAeK,MAAf,CAAuBF,OAAD,IAAa;AAC3C,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELW,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELiB,QAAAA,GAAG,EAAEhB,MAAM,CAACI;AAFP,OAAP;;AAIF;AACE,aAAOL,KAAP;AArDJ;AAuDD,CAxDD","sourcesContent":["import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      ret\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        err: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}