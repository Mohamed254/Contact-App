{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khadarow\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios'; // import { v4 as uuidv4 } from 'uuid';\n// import uuid from \"uuid\";\n// import { v4 as uuid } from \"uuid\";\n// import {v4 as uuid} from \"uuid\";\n\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Get contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/Khadarow/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","post","contact","config","type","payload","data","err","response","msg","addContact","headers","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from 'axios';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import uuid from \"uuid\";\r\n// import { v4 as uuid } from \"uuid\";\r\n// import {v4 as uuid} from \"uuid\";\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from \"../types\";\r\n\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filtered : null,\r\n    error : null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n\r\n  //Get contacts\r\n  const getContacts = async () => {\r\n    \r\n\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config);\r\n      \r\n      dispatch({ \r\n        type: ADD_CONTACT, \r\n        payload: res.data\r\n      });\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n         type: CONTACT_ERROR,\r\n         payload: err.response.msg\r\n      })\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  //Add Contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config);\r\n      \r\n      dispatch({ \r\n        type: ADD_CONTACT, \r\n        payload: res.data\r\n      });\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n         type: CONTACT_ERROR,\r\n         payload: err.response.msg\r\n      })\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  //Delete Contact\r\n  const deleteContact = (id) => {\r\n    dispatch({ \r\n      type: DELETE_CONTACT,\r\n      payload: id\r\n       });\r\n  };\r\n\r\n  //Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  //Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT});\r\n  }\r\n\r\n  //Update Contact\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n  //Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  //clear filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER});\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}